package com.example.artinstituteofchicagono.data.room

import androidx.room.Entity
import androidx.room.PrimaryKey
import androidx.room.TypeConverters
import com.example.artinstituteofchicagono.data.model.Data

@TypeConverters(ListTypeConverter::class)
@Entity
data class Paint(
    val alt_artist_ids: List<String?>?,
    val alt_classification_ids: List<String?>?,
    val alt_image_ids: List<String?>?,
    val alt_material_ids: List<String?>?,
    // e?i
    val alt_style_ids: List<String?>?,
    val alt_subject_ids: List<String?>?,
    val alt_technique_ids: List<String?>?,
    // ei
    val alt_titles: List<String?>?,
    val api_link: String?,
    val api_model: String?,
    val artist_display: String?,
    val artist_id: Int?,
    // int
    val artist_ids: List<String?>?,
    val artist_title: String?,
    val artist_titles: List<String?>?,
    val artwork_type_id: Int?,
    val artwork_type_title: String?,
    // ei
    val boost_rank: String?,
    val catalogue_display: String?,
    val category_ids: List<String>?,
    val category_titles: List<String>?,
    val classification_id: String?,
    val classification_ids: List<String>?,
    val classification_title: String?,
    val classification_titles: List<String>?,
    val copyright_notice: String?,
    val credit_line: String?,
    val date_display: String?,
    val date_end: Int?,
    // ei
    val date_qualifier_id: String?,
    val date_qualifier_title: String?,
    val date_start: Int?,
    val department_id: String?,
    val department_title: String?,
    val dimensions: String?,
    val document_ids: List<String>?,
    val exhibition_history: String?,
    val fiscal_year: Int?,
    // ei
    val fiscal_year_deaccession: String?,
    // ei
    val gallery_id: String?,
    // ei
    val gallery_title: String?,
    val has_advanced_imaging: Boolean?,
    val has_educational_resources: Boolean?,
    val has_multimedia_resources: Boolean?,
    val has_not_been_viewed_much: Boolean?,
    @PrimaryKey(autoGenerate = false) val id: Int,
    val image_id: String?,
    val inscriptions: String?,
    val internal_department_id: Int?,
    val is_boosted: Boolean?,
    val is_on_view: Boolean?,
    val is_public_domain: Boolean?,
    val is_zoomable: Boolean?,
    val latitude: Double?,
    val latlon: String?,
    val longitude: Double?,
    val main_reference_number: String?,
    val material_id: String?,
    val material_ids: List<String>?,
    val material_titles: List<String>?,
    val max_zoom_window_size: Int?,
    val medium_display: String?,
    val on_loan_display: String?,
    val place_of_origin: String?,
    val provenance_text: String?,
    val publication_history: String?,
    val publishing_verification_level: String?,
    // Long
    val section_ids: List<String>?,
    val section_titles: List<String>?,
    // ei
    val site_ids: List<String?>?,
    val sound_ids: List<String?>?,
    val source_updated_at: String?,
    val style_id: String?,
    val style_ids: List<String>?,
    val style_title: String?,
    val style_titles: List<String>?,
    val subject_id: String?,
    val subject_ids: List<String?>?,
    val subject_titles: List<String?>?,
    val suggest_autocomplete_boosted: String?,
    val technique_id: String?,
    val technique_ids: List<String>?,
    val technique_titles: List<String>?,
    val term_titles: List<String>?,
    // ei
    val text_ids: List<String?>,
    val theme_titles: List<String>?,
    val timestamp: String?,
    val title: String?,
    val updated_at: String?,
    val video_ids: List<String?>?
) {
    constructor(p: Data) : this(
        p.alt_artist_ids,
        p.alt_classification_ids,
        p.alt_image_ids,
        p.alt_material_ids,
        p.alt_style_ids,
        p.alt_subject_ids,
        p.alt_technique_ids,
        p.alt_titles,
        p.api_link,
        p.api_model,
        p.artist_display,
        p.artist_id,
        p.artist_ids,
        p.artist_title,
        p.artist_titles,
        p.artwork_type_id,
        p.artwork_type_title,
        p.boost_rank,
        p.catalogue_display,
        p.category_ids,
        p.category_titles,
        p.classification_id,
        p.classification_ids,
        p.classification_title,
        p.classification_titles,
        p.copyright_notice,
        p.credit_line,
        p.date_display,
        p.date_end,
        p.date_qualifier_id,
        p.date_qualifier_title,
        p.date_start,
        p.department_id,
        p.department_title,
        p.dimensions,
        p.document_ids,
        p.exhibition_history,
        p.fiscal_year,
        p.fiscal_year_deaccession,
        p.gallery_id,
        p.gallery_title,
        p.has_advanced_imaging,
        p.has_educational_resources,
        p.has_multimedia_resources,
        p.has_not_been_viewed_much,
        p.id,
        p.image_id,
        p.inscriptions,
        p.internal_department_id,
        p.is_boosted,
        p.is_on_view,
        p.is_public_domain,
        p.is_zoomable,
        p.latitude,
        p.latlon,
        p.longitude,
        p.main_reference_number,
        p.material_id,
        p.material_ids,
        p.material_titles,
        p.max_zoom_window_size,
        p.medium_display,
        p.on_loan_display,
        p.place_of_origin,
        p.provenance_text,
        p.publication_history,
        p.publishing_verification_level,
        p.section_ids,
        p.section_titles,
        p.site_ids,
        p.sound_ids,
        p.source_updated_at,
        p.style_id,
        p.style_ids,
        p.style_title,
        p.style_titles,
        p.subject_id,
        p.subject_ids,
        p.subject_titles,
        p.suggest_autocomplete_boosted,
        p.technique_id,
        p.technique_ids,
        p.technique_titles,
        p.term_titles,
        p.text_ids,
        p.theme_titles,
        p.timestamp,
        p.title,
        p.updated_at,
        p.video_ids
    )
}